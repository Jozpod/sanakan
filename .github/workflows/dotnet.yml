name: Build, Tests, Code Coverage

on:
  push:
    paths-ignore:
      - LICENSE
      - ".github/**"
      - "*.md"
      - ".gitignore"

    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache Nuget
        uses: actions/cache@v1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Run Tests
        continue-on-error: true
        # Parallel build produces invalid code coverage
        # Once they add support to it, following lines might be replaced with:
        # `dotnet test --no-build --verbosity minimal --configuration Release /p:CollectCoverage=true /p:CoverletOutput=../TestResults/ /p:MergeWith=../TestResults/coverlet.json /p:CoverletOutputFormat=\"lcov,json\"``
        # Also some project tests had to be separated as codecov can't figure out its dependency between web app.
        # Probably caused by indirect dependency injection via assembly.
        run: |
          dotnet test Tests/Common.Tests/Common.Tests.csproj  --no-build --verbosity minimal --configuration Release
          dotnet test Tests/DAL.MySql.Migrator.Tests/DAL.MySql.Migrator.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/DAL.MySql.Schema.Tests/DAL.MySql.Schema.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/Web.Tests/Web.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/DAL.Tests/DAL.Tests.csproj  --no-build --verbosity minimal --configuration Release
          dotnet test Tests/DiscordBot.Tests/DiscordBot.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/ShindenApi.Tests/ShindenApi.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/DiscordBot.Session.Tests/DiscordBot.Session.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/DiscordBot.Supervisor.Tests/DiscordBot.Supervisor.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/DiscordBot.Services.Tests/DiscordBot.Services.Tests.csproj  --no-build --verbosity minimal --configuration Release
          dotnet test Tests/Daemon.Tests/Daemon.Tests.csproj  --no-build --verbosity minimal --configuration Release
          dotnet test Tests/Game.Tests/Game.Tests.csproj --no-build --verbosity minimal --configuration Release
          dotnet test Tests/TaskQueue.Tests/TaskQueue.Tests.csproj --no-build --verbosity minimal --configuration Release
      - name: Publish coverage report to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: "./Tests/TestResults/DAL.Tests.coverage.xml,\
            ./Tests/TestResults/Web.Tests.coverage.xml,\
            ./Tests/TestResults/DiscordBot.Tests.coverage.xml,\
            ./Tests/TestResults/ShindenApi.Tests.coverage.xml,\
            ./Tests/TestResults/DiscordBot.Session.Tests.coverage.xml,\
            ./Tests/TestResults/DiscordBot.Supervisor.Tests.coverage.xml,\
            ./Tests/TestResults/DiscordBot.Services.Tests.coverage.xml,\
            ./Tests/TestResults/Daemon.Tests.coverage.xml,\
            ./Tests/TestResults/Game.Tests.coverage.xml,\
            ./Tests/TestResults/TaskQueue.Tests.coverage.xml"
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
